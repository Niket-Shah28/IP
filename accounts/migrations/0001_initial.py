# Generated by Django 4.0.3 on 2023-06-08 11:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sapid', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email Address')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('grad_year', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_link', models.CharField(blank=True, default='', max_length=50)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationStack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Frontend', 'Frontend'), ('Django', 'Django'), ('Node', 'Node'), ('ReactNative', 'ReactNative'), ('FullstackNode', 'FullstackNode'), ('Flutter', 'Flutter'), ('FullstackDjango', 'FullstackDjango')], max_length=20)),
                ('repo_link', models.CharField(blank=True, max_length=50)),
                ('text', models.CharField(blank=True, max_length=200)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stack', to='accounts.application')),
            ],
        ),
        migrations.CreateModel(
            name='Interviewee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interviewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('BE', 'BE'), ('TE', 'TE')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Frontend', 'Frontend'), ('Django', 'Django'), ('Node', 'Node'), ('ReactNative', 'ReactNative'), ('FullstackNode', 'FullstackNode'), ('Flutter', 'Flutter'), ('FullstackDjango', 'FullstackDjango')], max_length=20)),
                ('resources', models.FileField(blank=True, max_length=200, upload_to='resources')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_question', models.TextField(max_length=255)),
                ('task_description', models.TextField(blank=True, max_length=500)),
                ('task_resources', models.FileField(blank=True, upload_to='tasks')),
                ('stack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.stack')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True)),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.question')),
                ('stack', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.applicationstack')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='stack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.stack'),
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('interviewees', models.ManyToManyField(blank=True, to='accounts.interviewee')),
                ('interviewers', models.ManyToManyField(related_name='interviewers', to='accounts.interviewer')),
            ],
        ),
        migrations.AddField(
            model_name='interviewer',
            name='stack',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.stack'),
        ),
        migrations.AddField(
            model_name='interviewer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('meet_link', models.URLField(blank=True, max_length=255)),
                ('date_time', models.DateTimeField()),
                ('panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.panel')),
            ],
        ),
        migrations.AddField(
            model_name='application',
            name='interviewee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.interviewee'),
        ),
    ]
